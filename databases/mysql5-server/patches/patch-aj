$NetBSD: patch-aj,v 1.4 2010/02/18 15:46:10 taca Exp $

--- scripts/mysqld_safe.sh.orig	2010-01-15 09:49:15.000000000 +0000
+++ scripts/mysqld_safe.sh
@@ -345,6 +345,14 @@ then
   ulimit -c $core_file_size
 fi
 
+datemsg()
+{
+	echo -n $(date +'%y%M%d %H:%M:%S')"  "
+	echo "$*"
+}
+
+exec >>$err_log 2>&1
+
 #
 # If there exists an old pid file, check if the daemon is already running
 # Note: The switches to 'ps' may depend on your operating system
@@ -355,18 +363,16 @@ then
   then
     if @FIND_PROC@
     then    # The pid contains a mysqld process
-      echo "A mysqld process already exists"
-      echo "A mysqld process already exists at " `date` >> $err_log
+      datemsg "A mysqld process already exists"
       exit 1
     fi
   fi
   rm -f $pid_file
   if test -f $pid_file
   then
-    echo "Fatal error: Can't remove the pid file: $pid_file"
-    echo "Fatal error: Can't remove the pid file: $pid_file at " `date` >> $err_log
-    echo "Please remove it manually and start $0 again"
-    echo "mysqld daemon not started"
+    datemsg "Fatal error: Can't remove the pid file: $pid_file"
+    datemsg "Please remove it manually and start $0 again"
+    datemsg "mysqld daemon not started"
     exit 1
   fi
 fi
@@ -379,11 +385,11 @@ fi
 # Alternatively, you can start mysqld with the "myisam-recover" option. See
 # the manual for details.
 #
-# echo "Checking tables in $DATADIR"
+# datemsg "Checking tables in $DATADIR"
 # $MY_BASEDIR_VERSION/bin/myisamchk --silent --force --fast --medium-check $DATADIR/*/*.MYI
 # $MY_BASEDIR_VERSION/bin/isamchk --silent --force $DATADIR/*/*.ISM
 
-echo "Starting $MYSQLD daemon with databases from $DATADIR"
+datemsg "Starting $MYSQLD daemon with databases from $DATADIR"
 
 # Does this work on all systems?
 #if type ulimit | grep "shell builtin" > /dev/null
@@ -391,7 +397,7 @@ echo "Starting $MYSQLD daemon with datab
 #  ulimit -n 256 > /dev/null 2>&1		# Fix for BSD and FreeBSD systems
 #fi
 
-echo "`date +'%y%m%d %H:%M:%S  mysqld started'`" >> $err_log
+datemsg "mysqld started"
 while true
 do
   rm -f $safe_mysql_unix_port $pid_file	# Some extra safety
@@ -403,7 +409,7 @@ do
   fi
   if test ! -f $pid_file		# This is removed if normal shutdown
   then
-    echo "STOPPING server from pid file $pid_file"
+    datemsg "STOPPING server from pid file $pid_file"
     break
   fi
 
@@ -416,7 +422,7 @@ do
     # kill -9 is used or the process won't react on the kill.
     numofproces=`ps xaww | grep -v "grep" | grep "$ledir/$MYSQLD\>" | grep -c "pid-file=$pid_file"`
 
-    echo -e "\nNumber of processes running now: $numofproces" | tee -a $err_log
+    datemsg -e "\nNumber of processes running now: $numofproces"
     I=1
     while test "$I" -le "$numofproces"
     do 
@@ -429,16 +435,14 @@ do
       #    echo "TEST $I - $T **"
       if kill -9 $T
       then
-        echo "$MYSQLD process hanging, pid $T - killed" | tee -a $err_log
+        datemsg "$MYSQLD process hanging, pid $T - killed"
       else 
         break
       fi
       I=`expr $I + 1`
     done
   fi
-  echo "`date +'%y%m%d %H:%M:%S'`  mysqld restarted" | tee -a $err_log
+  datemsg "mysqld restarted"
 done
 
-echo "`date +'%y%m%d %H:%M:%S'`  mysqld ended" | tee -a $err_log
-echo "" | tee -a $err_log
-
+datemsg "mysqld ended"
