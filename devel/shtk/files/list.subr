# Copyright 2012 Google Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
# * Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in the
#   documentation and/or other materials provided with the distribution.
# * Neither the name of Google Inc. nor the names of its contributors
#   may be used to endorse or promote products derived from this software
#   without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# \file list.subr
# List-manipulation functions.
#
# For the purposes of this file, a list is a collection of words separted
# by IFS.  Most of the functions of this file, if not all, take lists as
# a variable list of arguments.


# Looks for an item in a list of items
#
# \param item The item to look for.
# \param ... Contents of the list in which to search for the item.
#
# \return 0 if the item is found, 1 otherwise.
shtk_list_contains() {
    local item="${1}"; shift

    while [ ${#} -gt 0 ]; do
        [ "${1}" != "${item}" ] || return 0
        shift
    done
    return 1
}


# Filters a list based on a pattern.
#
# \param pattern Pattern to use for filtering.
# \param ... Contents of the list to filter.
#
# \post The matched elements are printed on stdout.
shtk_list_filter() {
    local pattern="${1}"; shift

    for arg in "${@}"; do
        case "${arg}" in
            ${pattern}) echo "${arg}" ;;
        esac
    done
}
