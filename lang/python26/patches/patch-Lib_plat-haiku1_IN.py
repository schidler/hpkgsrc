$NetBSD$

--- Lib/plat-haiku1/IN.py.orig	2012-03-26 21:20:52.845414400 +0000
+++ Lib/plat-haiku1/IN.py
@@ -0,0 +1,441 @@
+# Generated by h2py from /boot/develop/headers/posix/netinet/in.h
+
+# Included from net/if.h
+
+# Included from net/route.h
+
+# Included from sys/socket.h
+
+# Included from stdint.h
+
+# Included from config/types.h
+
+# Included from config/HaikuConfig.h
+__HAIKU_ARCH_X86 = 1
+__HAIKU_ARCH_PHYSICAL_BITS = 64
+__HAIKU_ARCH_X86_64 = 1
+__HAIKU_ARCH_BITS = 64
+__HAIKU_ARCH_PPC = 1
+__HAIKU_BIG_ENDIAN = 1
+__HAIKU_ARCH_M68K = 1
+__HAIKU_BIG_ENDIAN = 1
+__HAIKU_ARCH_MIPSEL = 1
+__HAIKU_ARCH_ARM = 1
+__HAIKU_ARCH_BITS = 32
+__HAIKU_ARCH_32_BIT = 1
+__HAIKU_ARCH_64_BIT = 1
+__HAIKU_ARCH_PHYSICAL_BITS = __HAIKU_ARCH_BITS
+__HAIKU_ARCH_PHYSICAL_32_BIT = 1
+__HAIKU_ARCH_PHYSICAL_64_BIT = 1
+__HAIKU_LITTLE_ENDIAN = 1
+__HAIKU_BEOS_COMPATIBLE = 1
+__HAIKU_BEOS_COMPATIBLE_TYPES = 1
+__HAIKU_SADDR_MAX = (2147483647)
+__HAIKU_SADDR_MIN = (-__HAIKU_SADDR_MAX-1)
+__HAIKU_PHYS_SADDR_MAX = (2147483647)
+__HAIKU_PHYS_SADDR_MIN = (-__HAIKU_SADDR_MAX-1)
+__HAIKU_STD_PRI_PREFIX_32 = ""
+__HAIKU_STD_PRI_PREFIX_64 = "ll"
+__HAIKU_PRI_PREFIX_32 = "l"
+__HAIKU_PRI_PREFIX_32 = __HAIKU_STD_PRI_PREFIX_32
+__HAIKU_PRI_PREFIX_64 = __HAIKU_STD_PRI_PREFIX_64
+__HAIKU_PRI_PREFIX_ADDR = __HAIKU_PRI_PREFIX_64
+__HAIKU_PRI_PREFIX_ADDR = __HAIKU_PRI_PREFIX_32
+__HAIKU_PRI_PREFIX_PHYS_ADDR = __HAIKU_PRI_PREFIX_64
+__HAIKU_PRI_PREFIX_PHYS_ADDR = __HAIKU_PRI_PREFIX_32
+__HAIKU_PRI_PREFIX_GENERIC_ADDR = __HAIKU_PRI_PREFIX_ADDR
+__HAIKU_PRI_PREFIX_GENERIC_ADDR = __HAIKU_PRI_PREFIX_PHYS_ADDR
+INT8_MIN = (-128)
+INT8_MAX = (127)
+INT16_MIN = (-32768)
+INT16_MAX = (32767)
+INT32_MAX = (2147483647)
+INT32_MIN = (-INT32_MAX-1)
+INT_LEAST8_MIN = INT8_MIN
+INT_LEAST8_MAX = INT8_MAX
+INT_LEAST16_MIN = INT16_MIN
+INT_LEAST16_MAX = INT16_MAX
+INT_LEAST32_MIN = INT32_MIN
+INT_LEAST32_MAX = INT32_MAX
+INT_FAST8_MIN = INT8_MIN
+INT_FAST8_MAX = INT8_MAX
+INT_FAST16_MIN = INT16_MIN
+INT_FAST16_MAX = INT16_MAX
+INT_FAST32_MIN = INT32_MIN
+INT_FAST32_MAX = INT32_MAX
+INTPTR_MIN = __HAIKU_SADDR_MIN
+INTPTR_MAX = __HAIKU_SADDR_MAX
+PTDIFF_MIN = __HAIKU_SADDR_MIN
+PTDIFF_MAX = __HAIKU_SADDR_MAX
+SIG_ATOMIC_MIN = INT32_MIN
+SIG_ATOMIC_MAX = INT32_MAX
+WINT_MIN = 0
+def INT8_C(value): return value
+
+def INT16_C(value): return value
+
+def INT32_C(value): return value
+
+def INT64_C(value): return value ## LL
+
+def UINT8_C(value): return value ## U
+
+def UINT16_C(value): return value ## U
+
+def UINT32_C(value): return value ## U
+
+def UINT64_C(value): return value ## ULL
+
+def INTMAX_C(value): return value ## LL
+
+def UINTMAX_C(value): return value ## ULL
+
+
+# Included from sys/param.h
+
+# Included from limits.h
+ARG_MAX = (32768)
+ATEXIT_MAX = (32)
+CHILD_MAX = (1024)
+IOV_MAX = (1024)
+FILESIZEBITS = (64)
+HOST_NAME_MAX = (255)
+LINE_MAX = (2048)
+LINK_MAX = (1)
+LOGIN_NAME_MAX = (32)
+MAX_CANON = (255)
+MAX_INPUT = (255)
+NAME_MAX = (256)
+NGROUPS_MAX = (32)
+OPEN_MAX = (128)
+PAGE_SIZE = (4096)
+PAGESIZE = (4096)
+PATH_MAX = (1024)
+PIPE_MAX = (512)
+PTHREAD_KEYS_MAX = 256
+PTHREAD_STACK_MIN = 4096
+SSIZE_MAX = __HAIKU_SADDR_MAX
+TTY_NAME_MAX = (256)
+TZNAME_MAX = (32)
+SYMLINK_MAX = (1024)
+SYMLOOP_MAX = (16)
+_POSIX_ARG_MAX = (32768)
+_POSIX_CHILD_MAX = (1024)
+_POSIX_HOST_NAME_MAX = (255)
+_POSIX_LINK_MAX = (1)
+_POSIX_LOGIN_NAME_MAX = (9)
+_POSIX_MAX_CANON = (255)
+_POSIX_MAX_INPUT = (255)
+_POSIX_NAME_MAX = (255)
+_POSIX_NGROUPS_MAX = (8)
+_POSIX_OPEN_MAX = (128)
+_POSIX_PATH_MAX = (1024)
+_POSIX_PIPE_BUF = (512)
+_POSIX_SSIZE_MAX = __HAIKU_SADDR_MAX
+_POSIX_STREAM_MAX = (8)
+_POSIX_TTY_NAME_MAX = (256)
+_POSIX_TZNAME_MAX = (3)
+_POSIX_SIGQUEUE_MAX = 32
+_POSIX_RTSIG_MAX = 8
+_POSIX_CLOCKRES_MIN = 20000000
+_POSIX_TIMER_MAX = 32
+_POSIX_DELAYTIMER_MAX = 32
+_POSIX2_LINE_MAX = (2048)
+MAXPATHLEN = PATH_MAX
+MAXSYMLINKS = SYMLOOP_MAX
+NOFILE = OPEN_MAX
+def _ALIGN(p): return \
+
+MAXHOSTNAMELEN = 256
+
+# Included from sys/types.h
+
+# Included from BeBuild.h
+B_BEOS_VERSION_4 = 0x0400
+B_BEOS_VERSION_4_5 = 0x0450
+B_BEOS_VERSION_5 = 0x0500
+B_BEOS_VERSION = B_BEOS_VERSION_5
+B_BEOS_VERSION_MAUI = B_BEOS_VERSION_5
+B_HAIKU_VERSION_BEOS = 0x00000001
+B_HAIKU_VERSION_BONE = 0x00000002
+B_HAIKU_VERSION_DANO = 0x00000003
+B_HAIKU_VERSION_1_ALPHA_1 = 0x00000100
+B_HAIKU_VERSION_1_PRE_ALPHA_2 = 0x00000101
+B_HAIKU_VERSION_1_ALPHA_2 = 0x00000200
+B_HAIKU_VERSION_1_PRE_ALPHA_3 = 0x00000201
+B_HAIKU_VERSION_1_ALPHA_3 = 0x00000300
+B_HAIKU_VERSION_1_PRE_BETA_1 = 0x00000301
+B_HAIKU_VERSION_1 = 0x00010000
+B_HAIKU_VERSION = B_HAIKU_VERSION_1_PRE_BETA_1
+B_HAIKU_ABI_MAJOR = (-65536)
+B_HAIKU_ABI_GCC_2 = 0x00020000
+B_HAIKU_ABI_GCC_4 = 0x00040000
+B_HAIKU_ABI_GCC_2_ANCIENT = 0x00020000
+B_HAIKU_ABI_GCC_2_BEOS = 0x00020001
+B_HAIKU_ABI_GCC_2_HAIKU = 0x00020002
+B_HAIKU_ABI = B_HAIKU_ABI_GCC_2_HAIKU
+B_HAIKU_ABI = B_HAIKU_ABI_GCC_4
+B_HAIKU_BITS = __HAIKU_ARCH_BITS
+B_HAIKU_PHYSICAL_BITS = __HAIKU_ARCH_PHYSICAL_BITS
+B_HAIKU_64_BIT = 1
+B_HAIKU_32_BIT = 1
+B_HAIKU_PHYSICAL_64_BIT = 1
+B_HAIKU_PHYSICAL_32_BIT = 1
+B_HAIKU_BEOS_COMPATIBLE = 1
+def _UNUSED(argument): return argument
+
+
+# Included from null.h
+NULL = 0
+
+# Included from size_t.h
+
+# Included from time.h
+CLOCKS_PER_SEC = 1000000
+CLK_TCK = CLOCKS_PER_SEC
+MAX_TIMESTR = 70
+TIMER_ABSTIME = 1
+
+# Included from sys/uio.h
+AF_UNSPEC = 0
+AF_INET = 1
+AF_APPLETALK = 2
+AF_ROUTE = 3
+AF_LINK = 4
+AF_INET6 = 5
+AF_DLI = 6
+AF_IPX = 7
+AF_NOTIFY = 8
+AF_LOCAL = 9
+AF_UNIX = AF_LOCAL
+AF_BLUETOOTH = 10
+AF_MAX = 11
+PF_UNSPEC = AF_UNSPEC
+PF_INET = AF_INET
+PF_ROUTE = AF_ROUTE
+PF_LINK = AF_LINK
+PF_INET6 = AF_INET6
+PF_LOCAL = AF_LOCAL
+PF_UNIX = AF_UNIX
+PF_BLUETOOTH = AF_BLUETOOTH
+SOCK_STREAM = 1
+SOCK_DGRAM = 2
+SOCK_RAW = 3
+SOCK_SEQPACKET = 5
+SOCK_MISC = 255
+SOL_SOCKET = -1
+SO_ACCEPTCONN = 0x00000001
+SO_BROADCAST = 0x00000002
+SO_DEBUG = 0x00000004
+SO_DONTROUTE = 0x00000008
+SO_KEEPALIVE = 0x00000010
+SO_OOBINLINE = 0x00000020
+SO_REUSEADDR = 0x00000040
+SO_REUSEPORT = 0x00000080
+SO_USELOOPBACK = 0x00000100
+SO_LINGER = 0x00000200
+SO_SNDBUF = 0x40000001
+SO_SNDLOWAT = 0x40000002
+SO_SNDTIMEO = 0x40000003
+SO_RCVBUF = 0x40000004
+SO_RCVLOWAT = 0x40000005
+SO_RCVTIMEO = 0x40000006
+SO_ERROR = 0x40000007
+SO_TYPE = 0x40000008
+SO_NONBLOCK = 0x40000009
+SO_BINDTODEVICE = 0x4000000a
+SO_PEERCRED = 0x4000000b
+SHUT_RD = 0
+SHUT_WR = 1
+SHUT_RDWR = 2
+SOMAXCONN = 32
+MSG_OOB = 0x0001
+MSG_PEEK = 0x0002
+MSG_DONTROUTE = 0x0004
+MSG_EOR = 0x0008
+MSG_TRUNC = 0x0010
+MSG_CTRUNC = 0x0020
+MSG_WAITALL = 0x0040
+MSG_DONTWAIT = 0x0080
+MSG_BCAST = 0x0100
+MSG_MCAST = 0x0200
+MSG_EOF = 0x0400
+def CMSG_FIRSTHDR(mhdr): return \
+
+def CMSG_ALIGN(len): return _ALIGN(len)
+
+SCM_RIGHTS = 0x01
+RTF_UP = 0x00000001
+RTF_GATEWAY = 0x00000002
+RTF_HOST = 0x00000004
+RTF_REJECT = 0x00000008
+RTF_DYNAMIC = 0x00000010
+RTF_MODIFIED = 0x00000020
+RTF_DEFAULT = 0x00000080
+RTF_STATIC = 0x00000800
+RTF_BLACKHOLE = 0x00001000
+RTF_LOCAL = 0x00200000
+IF_NAMESIZE = 32
+IFNAMSIZ = IF_NAMESIZE
+IFF_UP = 0x0001
+IFF_BROADCAST = 0x0002
+IFF_LOOPBACK = 0x0008
+IFF_POINTOPOINT = 0x0010
+IFF_NOARP = 0x0040
+IFF_AUTOUP = 0x0080
+IFF_PROMISC = 0x0100
+IFF_ALLMULTI = 0x0200
+IFF_SIMPLEX = 0x0800
+IFF_LINK = 0x1000
+IFF_AUTO_CONFIGURED = 0x2000
+IFF_CONFIGURING = 0x4000
+IFF_MULTICAST = 0x8000
+IFAF_AUTO_CONFIGURED = 0x0001
+IFAF_CONFIGURING = 0x0002
+def _SIZEOF_ADDR_IFREQ(request): return \
+
+
+# Included from endian.h
+LITTLE_ENDIAN = 1234
+BIG_ENDIAN = 0
+BYTE_ORDER = LITTLE_ENDIAN
+BIG_ENDIAN = 4321
+LITTLE_ENDIAN = 0
+BYTE_ORDER = BIG_ENDIAN
+__BIG_ENDIAN = BIG_ENDIAN
+__LITTLE_ENDIAN = LITTLE_ENDIAN
+__BYTE_ORDER = BYTE_ORDER
+
+# Included from netinet6/in6.h
+__IPV6_ADDR_SCOPE_NODELOCAL = 0x01
+__IPV6_ADDR_SCOPE_INTFACELOCAL = 0x01
+__IPV6_ADDR_SCOPE_LINKLOCAL = 0x02
+__IPV6_ADDR_SCOPE_SITELOCAL = 0x05
+__IPV6_ADDR_SCOPE_ORGLOCAL = 0x08
+__IPV6_ADDR_SCOPE_GLOBAL = 0x0e
+def IN6_IS_ADDR_UNSPECIFIED(a): return \
+
+def IN6_IS_ADDR_LOOPBACK(a): return \
+
+def IN6_IS_ADDR_MULTICAST(a): return \
+
+def IN6_IS_ADDR_LINKLOCAL(a): return \
+
+def IN6_IS_ADDR_SITELOCAL(a): return \
+
+def IN6_IS_ADDR_V4MAPPED(a): return \
+
+def IN6_IS_ADDR_V4COMPAT(a): return \
+
+def IN6_IS_ADDR_MC_NODELOCAL(a): return \
+
+def IN6_IS_ADDR_MC_LINKLOCAL(a): return \
+
+def IN6_IS_ADDR_MC_SITELOCAL(a): return \
+
+def IN6_IS_ADDR_MC_ORGLOCAL(a): return \
+
+def IN6_IS_ADDR_MC_GLOBAL(a): return \
+
+INET6_ADDRSTRLEN = 46
+def htons(x): return __swap_int16(x)
+
+def ntohs(x): return __swap_int16(x)
+
+def htonl(x): return (x)
+
+def ntohl(x): return (x)
+
+def htons(x): return (x)
+
+def ntohs(x): return (x)
+
+IPPROTO_IP = 0
+IPPROTO_HOPOPTS = 0
+IPPROTO_ICMP = 1
+IPPROTO_IGMP = 2
+IPPROTO_TCP = 6
+IPPROTO_UDP = 17
+IPPROTO_IPV6 = 41
+IPPROTO_ROUTING = 43
+IPPROTO_FRAGMENT = 44
+IPPROTO_ESP = 50
+IPPROTO_AH = 51
+IPPROTO_ICMPV6 = 58
+IPPROTO_NONE = 59
+IPPROTO_DSTOPTS = 60
+IPPROTO_ETHERIP = 97
+IPPROTO_RAW = 255
+IPPROTO_MAX = 256
+IPPORT_RESERVED = 1024
+IPPORT_USERRESERVED = 49151
+IP_OPTIONS = 1
+IP_HDRINCL = 2
+IP_TOS = 3
+IP_TTL = 4
+IP_RECVOPTS = 5
+IP_RECVRETOPTS = 6
+IP_RECVDSTADDR = 7
+IP_RETOPTS = 8
+IP_MULTICAST_IF = 9
+IP_MULTICAST_TTL = 10
+IP_MULTICAST_LOOP = 11
+IP_ADD_MEMBERSHIP = 12
+IP_DROP_MEMBERSHIP = 13
+IP_BLOCK_SOURCE = 14
+IP_UNBLOCK_SOURCE = 15
+IP_ADD_SOURCE_MEMBERSHIP = 16
+IP_DROP_SOURCE_MEMBERSHIP = 17
+MCAST_JOIN_GROUP = 18
+MCAST_BLOCK_SOURCE = 19
+MCAST_UNBLOCK_SOURCE = 20
+MCAST_LEAVE_GROUP = 21
+MCAST_JOIN_SOURCE_GROUP = 22
+MCAST_LEAVE_SOURCE_GROUP = 23
+IPV6_MULTICAST_IF = 24
+IPV6_MULTICAST_HOPS = 25
+IPV6_MULTICAST_LOOP = 26
+IPV6_UNICAST_HOPS = 27
+IPV6_JOIN_GROUP = 28
+IPV6_LEAVE_GROUP = 29
+IPV6_V6ONLY = 30
+IPV6_PKTINFO = 31
+IPV6_RECVPKTINFO = 32
+IPV6_HOPLIMIT = 33
+IPV6_RECVHOPLIMIT = 34
+IPV6_HOPOPTS = 35
+IPV6_DSTOPTS = 36
+IPV6_RTHDR = 37
+IN_LOOPBACKNET = 127
+def IN_CLASSA(i): return (((in_addr_t)(i) & (-2147483648)) == 0)
+
+IN_CLASSA_NET = (-16777216)
+IN_CLASSA_NSHIFT = 24
+IN_CLASSA_HOST = 0x00ffffff
+IN_CLASSA_MAX = 128
+def IN_CLASSB(i): return (((in_addr_t)(i) & (-1073741824)) == (-2147483648))
+
+IN_CLASSB_NET = (-65536)
+IN_CLASSB_NSHIFT = 16
+IN_CLASSB_HOST = 0x0000ffff
+IN_CLASSB_MAX = 65536
+def IN_CLASSC(i): return (((in_addr_t)(i) & (-536870912)) == (-1073741824))
+
+IN_CLASSC_NET = (-256)
+IN_CLASSC_NSHIFT = 8
+IN_CLASSC_HOST = 0x000000ff
+def IN_CLASSD(i): return (((in_addr_t)(i) & (-268435456)) == (-536870912))
+
+IN_CLASSD_NET = (-268435456)
+IN_CLASSD_NSHIFT = 28
+IN_CLASSD_HOST = 0x0fffffff
+def IN_MULTICAST(i): return IN_CLASSD(i)
+
+def IN_EXPERIMENTAL(i): return (((in_addr_t)(i) & (-268435456)) == (-268435456))
+
+def IN_BADCLASS(i): return (((in_addr_t)(i) & (-268435456)) == (-268435456))
+
+IP_MAX_MEMBERSHIPS = 20
+INET_ADDRSTRLEN = 16
+def in_nullhost(x): return ((x).s_addr == INADDR_ANY)
+
