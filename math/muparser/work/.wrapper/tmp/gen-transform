#! /bin/sh
shell_lib="/source/build/hpkgsrc/math/muparser/work/.wrapper/tmp/shell-lib"
wrapperlog="${WRAPPER_LOG-/source/build/hpkgsrc/math/muparser/work/.work.log}"
debug="${WRAPPER_DEBUG-no}"
cat="/bin/cat"
test="test"
. $shell_lib
case $debug in
yes)	debug_log="msg_log" ;;
*)	debug_log=":" ;;
esac
rpath_options="-Wl,--rpath, -Wl,-rpath-link, -Wl,-rpath, -Wl,-R -R"
gen()
{
	_sep=" 	\`\"':;,"
	_action=$1; shift
	save_IFS="${IFS}"; IFS=":"
	set -- $1
	IFS="${save_IFS}"
	_cmd="$1"; shift
	case $_cmd in
	depot)
		gen $_action "opt-depot:$1:$2"
		gen $_action "opt-depot:-I$1:-I$2"
		gen $_action "opt-depot:-L$1:-L$2"
		;;
	I)
		case $_action in
		transform)
			$debug_log $wrapperlog "   (gen-transform) $_cmd: $@"
			gen $_action "opt:-I$1:-I$2"
			gen $_action "opt-sub:-I$1:-I$2"
			;;
		untransform)
			$debug_log $wrapperlog "   (gen-transform) $_cmd: $@"
			gen $_action "opt:-I$2:-I$1"
			gen $_action "opt-sub:-I$2:-I$1"
			;;
		esac
		;;
	L)
		case $_action in
		transform)
			$debug_log $wrapperlog "   (gen-transform) $_cmd: $@"
			gen $_action "opt:-L$1:-L$2"
			gen $_action "opt-sub:-L$1:-L$2"
			;;
		untransform)
			$debug_log $wrapperlog "   (gen-transform) $_cmd: $@"
			gen $_action "opt:-L$2:-L$1"
			gen $_action "opt-sub:-L$2:-L$1"
			;;
		esac
		;;
	l)
		$debug_log $wrapperlog "   (gen-transform) $_cmd: $@"
		tolibs=
		fromlib="-l$1"; shift
		while $test $# -gt 0; do
			case $1 in
			"")	;;
			*)	case $tolibs in
				"")	tolibs="-l$1" ;;
				*)	tolibs="$tolibs -l$1" ;;
				esac
				;;
			esac
			shift
		done
		gen $_action "opt:$fromlib:$tolibs"
		;;
	libpath)
		case $_action in
		transform)
			$debug_log $wrapperlog "   (gen-transform) $_cmd: $@"
			$cat << EOF
s|^$1\(/[^$_sep]*\.la[$_sep]\)|$2\1|g
s|^$1\(/[^$_sep]*\.la\)$|$2\1|g
EOF
			;;
		untransform)
			$debug_log $wrapperlog "   (gen-transform) $_cmd: $@"
			$cat << EOF
s|\([$_sep]\)$1\(/[^$_sep]*\.la[$_sep]\)|\1$2\2|g
s|\([$_sep]\)$1\(/[^$_sep]*\.la[$_sep]\)|\1$2\2|g
s|\([$_sep]\)$1\(/[^$_sep]*\.la\)$|\1$2\2|g
s|^$1\(/[^$_sep]*\.la[$_sep]\)|$2\1|g
s|^$1\(/[^$_sep]*\.la\)$|$2\1|g
EOF
			;;
		esac
		;;
	mangle)
		$debug_log $wrapperlog "   (gen-transform) $_cmd: $@"
		gen $_action "opt:-I$1:-I$2"
		gen $_action "opt:-L$1:-L$2"
		gen $_action "rpath-exact:$1:$2"
		gen $_action "sub-mangle:$1:$2"
		;;
	no-abspath)
		$debug_log $wrapperlog "   (gen-transform) $_cmd"
		gen $_action "rm-optarg:-I/"
		gen $_action "rm-optarg:-L/"
		for _R in $rpath_options; do
			gen $_action "rm-optarg:$_R/"
		done
		;;
	no-rpath)
		$debug_log $wrapperlog "   (gen-transform) $_cmd"
		gen $_action rm-optarg:-Wl,--rpath,
		gen $_action rm-optarg:-Wl,-rpath-link,
		gen $_action rm-optarg:-Wl,-rpath,
		gen $_action rm-optarg:-Wl,-R
		gen $_action rm-optarg:-R
		;;
	opt)
		case $_action in
		transform)
			$debug_log $wrapperlog "   (gen-transform) $_cmd: $@"
			$cat << EOF
s|^$1\([$_sep]\)|$2\1|g
s|^$1$|$2|g
EOF
			;;
		untransform)
			$debug_log $wrapperlog "   (gen-transform) $_cmd: $@"
			$cat << EOF
s|\([$_sep]\)$1\([$_sep]\)|\1$2\2|g
s|\([$_sep]\)$1\([$_sep]\)|\1$2\2|g
s|\([$_sep]\)$1$|\1$2|g
s|^$1\([$_sep]\)|$2\1|g
s|^$1$|$2|g
EOF
			;;
		esac
		;;
	opt-depot)
		case $_action in
		transform)
			$debug_log $wrapperlog "   (gen-transform) $_cmd: $@"
			$cat << EOF
s|^$1/[^/$_sep]*\(/[^$_sep]*[$_sep]\)|$2\1|g
s|^$1/[^/$_sep]*\(/[^$_sep]*\)$|$2\1|g
EOF
			;;
		untransform)
			$debug_log $wrapperlog "   (gen-transform) $_cmd: $@"
			$cat << EOF
s|\([$_sep]\)$1/[^/$_sep]*\(/[^$_sep]*[$_sep]\)|\1$2\2|g
s|\([$_sep]\)$1/[^/$_sep]*\(/[^$_sep]*[$_sep]\)|\1$2\2|g
s|\([$_sep]\)$1/[^/$_sep]*\(/[^$_sep]*\)$|\1$2\2|g
s|^$1/[^/$_sep]*\(/[^$_sep]*[$_sep]\)|$2\1|g
s|^$1/[^/$_sep]*\(/[^$_sep]*\)$|$2\1|g
EOF
			;;
		esac
		;;
	opt-sub)
		$debug_log $wrapperlog "   (gen-transform) $_cmd: $@"
		gen $_action "opt-sub-trailer:$1::$2:"
		;;
	opt-sub-trailer)
		case $_action in
		transform)
			$debug_log $wrapperlog "   (gen-transform) $_cmd: $@"
			$cat << EOF
s|^$1\(/[^$_sep]*\)$2\([$_sep]\)|$3\1$4|g
s|^$1\(/[^$_sep]*\)$2$|$3\1$4|g
EOF
			;;
		untransform)
			$debug_log $wrapperlog "   (gen-transform) $_cmd: $@"
			$cat << EOF
s|\([$_sep]\)$1\(/[^$_sep]*\)$2\([$_sep]\)|\1$3\2$4\3|g
s|\([$_sep]\)$1\(/[^$_sep]*\)$2\([$_sep]\)|\1$3\2$4\3|g
s|\([$_sep]\)$1\(/[^$_sep]*\)$2$|\1$3\2$4|g
s|^$1\(/[^$_sep]*\)$2\([$_sep]\)|$3\1$4|g
s|^$1\(/[^$_sep]*\)$2$|$3\1$4|g
EOF
			;;
		esac
		;;
	P)
		case $_action in
		transform)
			$debug_log $wrapperlog "   (gen-transform) $_cmd: $@"
			gen $_action "libpath:$1:$2"
			;;
		untransform)
			$debug_log $wrapperlog "   (gen-transform) $_cmd: $@"
			gen $_action "libpath:$2:$1"
			;;
		esac
		;;
	rename)
		$debug_log $wrapperlog "   (gen-transform) $_cmd: $@"
		gen $_action "opt:$1:$2"
		;;
	rm)
		$debug_log $wrapperlog "   (gen-transform) $_cmd: $@"
		gen $_action "opt:$1:"
		;;
	rm-optarg)
		case $_action in
		transform)
			$debug_log $wrapperlog "   (gen-transform) $_cmd: $@"
			$cat << EOF
s|^$1[^$_sep]*\([$_sep]\)|\1|g
s|^$1[^$_sep]*$||g
EOF
			;;
		untransform)
			$debug_log $wrapperlog "   (gen-transform) $_cmd: $@"
			$cat << EOF
s|\([$_sep]\)$1[^$_sep]*\([$_sep]\)|\1\2|g
s|\([$_sep]\)$1[^$_sep]*\([$_sep]\)|\1\2|g
s|\([$_sep]\)$1[^$_sep]*$|\1|g
s|^$1[^$_sep]*\([$_sep]\)|\1|g
s|^$1[^$_sep]*$||g
EOF
			;;
		esac
		;;
	rmdir)
		$debug_log $wrapperlog "   (gen-transform) $_cmd: $@"
		gen $_action "opt:-I$1:"
		gen $_action "rm-optarg:-I$1/"
		gen $_action "opt:-L$1:"
		gen $_action "rm-optarg:-L$1/"
		for _R in $rpath_options; do
			gen $_action "opt:$_R$1:"
			gen $_action "rm-optarg:$_R$1/"
		done
		;;
	rpath)
		$debug_log $wrapperlog "   (gen-transform) $_cmd: $@"
		gen $_action "rpath-exact:$1:$2"
		gen $_action "sub-rpath:$1:$2"
		;;
	rpath-exact)
		$debug_log $wrapperlog "   (gen-transform) $_cmd: $@"
		for _R in $rpath_options; do
			gen $_action "opt:$_R$1:$_R$2"
		done
		;;
	strip-slashdot)
		$debug_log $wrapperlog "   (gen-transform) $_cmd: $@"
		gen $_action "opt-sub-trailer:$1:/\.:$1:"
		gen $_action "opt-sub-trailer:-I$1:/\.:-I$1:"
		gen $_action "opt-sub-trailer:-L$1:/\.:-L$1:"
		for _R in $rpath_options; do
			gen $_action "opt-sub-trailer:$_R$1:/\.:$_R$1:"
		done
		;;
	sub-mangle)
		$debug_log $wrapperlog "   (gen-transform) $_cmd: $@"
		gen $_action "libpath:$1:$2"
		gen $_action "opt-sub:-I$1:-I$2"
		gen $_action "opt-sub:-L$1:-L$2"
		gen $_action "sub-rpath:$1:$2"
		;;
	sub-rpath)
		$debug_log $wrapperlog "   (gen-transform) $_cmd: $@"
		for _R in $rpath_options; do
			gen $_action "opt-sub:$_R$1:$_R$2"
		done
		;;
	*)
		$debug_log $wrapperlog "   (gen-transform) $_cmd: $@ [unknown]"
		;;
	esac
}
action="$1"; shift
for arg do
	case $arg in
	transform:*)
		case $action in
		transform) gen $action "${arg#transform:}" ;;
		esac
		;;
	untransform:*)
		case $action in
		untransform) gen $action "${arg#untransform:}" ;;
		esac
		;;
	*)
		gen $action "$arg"
		;;
	esac
done
