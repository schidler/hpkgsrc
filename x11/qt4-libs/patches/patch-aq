$NetBSD$

--- configure.orig	2012-09-11 01:36:36.059244544 +0000
+++ configure
@@ -3197,13 +3197,13 @@ if [ -z "${CFG_HOST_ARCH}" ]; then
             CFG_HOST_ARCH=x86_64
         fi
         ;;
-    *:*:ppc)
+    *:*:ppc|*:*:powerpc)
         if [ "$OPT_VERBOSE" = "yes" ]; then
             echo "    32-bit PowerPC (powerpc)"
         fi
         CFG_HOST_ARCH=powerpc
         ;;
-    *:*:ppc64)
+    *:*:ppc64|*:*:powerpc64)
         if [ "$OPT_VERBOSE" = "yes" ]; then
             echo "    64-bit PowerPC (powerpc)"
         fi
@@ -3227,6 +3227,19 @@ if [ -z "${CFG_HOST_ARCH}" ]; then
         fi
         CFG_HOST_ARCH=sparc
         ;;
+    NetBSD:*:sparc)
+        if [ "$OPT_VERBOSE" = "yes" ]; then
+            echo "    NetBSD on SPARC"
+        fi
+        CFG_HOST_ARCH=sparc
+        ;;
+    NetBSD:*:sparc64)
+        if [ "$OPT_VERBOSE" = "yes" ]; then
+            echo "    NetBSD on SPARC64"
+        fi
+        CFG_HOST_ARCH=sparc
+        CFG_HOST_BITSIZE=64
+        ;;
     QNX:*:*)
         case "$UNAME_MACHINE" in
         x86pc)
@@ -3574,7 +3587,7 @@ fi
 if [ "$PLATFORM_MAC" = "yes" ] && [ '!' -z "$CFG_SDK" ]; then
     # get the darwin version. 10.0.0 and up means snow leopard.
     VERSION=`uname -r | tr '.' ' ' | awk '{print $1}'`
-    if [ "$VERSION" -gt 9 ] && [ "$CFG_SDK" == "/Developer/SDKs/MacOSX10.4u.sdk/" ] && [ "$PLATFORM" == "macx-g++" ]; then
+    if [ "$VERSION" -gt 9 ] && [ "$CFG_SDK" = "/Developer/SDKs/MacOSX10.4u.sdk/" ] && [ "$PLATFORM" = "macx-g++" ]; then
         echo
         echo "WARNING: The 10.4u SDK does not support gcc 4.2. Configure with -platform macx-g++40. "
         echo
@@ -4560,6 +4573,8 @@ elif [ "$PLATFORM_MAC" = "yes" ]; then
     Platform="Qt for Mac OS X"
 elif [ "$XPLATFORM_MINGW" = "yes" ]; then
     Platform="Qt for Windows"
+elif [ "$PLATFORM_HAIKU" = "yes" ]; then
+    Platform="Qt for Haiku"
 elif [ -n "`getXQMakeConf grep QMAKE_LIBS_X11`" ]; then
     PLATFORM_X11=yes
     Platform="Qt for Linux/X11"
@@ -5049,7 +5064,7 @@ if true; then ###[ '!' -f "$outpath/bin/
     done
 
     QMAKE_BUILD_ERROR=no
-    (cd "$outpath/qmake"; "$MAKE") || QMAKE_BUILD_ERROR=yes
+    (cd "$outpath/qmake"; "$MAKE" $MAKE_FLAGS) || QMAKE_BUILD_ERROR=yes
     [ '!' -z "$QCONFIG_H" ] && mv -f "$QCONFIG_H" "$QMAKE_QCONFIG_H" #move qmake's qconfig.h to qconfig.h.qmake
     [ '!' -z "$OLD_QCONFIG_H" ] && mv -f "${OLD_QCONFIG_H}.old" "$OLD_QCONFIG_H" #put back qconfig.h
     [ "$QMAKE_BUILD_ERROR" = "yes" ] && exit 2
@@ -5744,7 +5759,7 @@ if [ "$PLATFORM_MAC" = "yes" -a ! -z "$Q
     QT_NAMESPACE_MAC_CRC=`"$mactests/crc.test" "$XQMAKESPEC" "$QMAKE_CONFIG" $OPT_VERBOSE "$relpath" "$outpath" config.tests/mac/crc $QT_NAMESPACE $L_FLAGS $I_FLAGS $l_FLAGS`
 fi
 
-# X11/QWS/Lighthouse
+# X11/QWS/Lighthouse/Haiku
 if [ "$PLATFORM_X11" = "yes" -o "$PLATFORM_QWS" = "yes" -o "$PLATFORM_QPA" = "yes" ]; then
 
     # auto-detect Glib support
@@ -5898,7 +5913,7 @@ if [ "$PLATFORM_X11" = "yes" -o "$PLATFO
             fi
         fi
     fi
-fi # X11/QWS/Lighthouse
+fi # X11/QWS/Lighthouse/Haiku
 
 # X11
 if [ "$PLATFORM_X11" = "yes" -a "$CFG_GUI" != "no" ]; then
@@ -7076,7 +7091,7 @@ fi
 # select Carbon on 10.4 Tiger.
 if [ "$PLATFORM_MAC" = "yes" ]; then
     VERSION=`uname -r | tr '.' ' ' | awk '{print $1}'`
-    if [ "$VERSION" == 8 ]; then
+    if [ "$VERSION" = 8 ]; then
         CFG_MAC_COCOA="no";
         CFG_MAC_CARBON="yes";
     fi
@@ -8336,7 +8351,7 @@ QMakeVar set sql-plugins "$SQL_PLUGINS"
 [ "$CFG_EXCEPTIONS" = "no" ] && QCONFIG_FLAGS="$QCONFIG_FLAGS QT_NO_EXCEPTIONS"
 [ "$CFG_IPV6" = "no" ]       && QCONFIG_FLAGS="$QCONFIG_FLAGS QT_NO_IPV6"
 [ "$CFG_SXE" = "no" ]        && QCONFIG_FLAGS="$QCONFIG_FLAGS QT_NO_SXE"
-[ "$CFG_DBUS" = "no" ]      && QCONFIG_FLAGS="$QCONFIG_FLAGS QT_NO_DBUS"
+#[ "$CFG_DBUS" = "no" ]      && QCONFIG_FLAGS="$QCONFIG_FLAGS QT_NO_DBUS"
 
 if [ "$PLATFORM_QWS" != "yes" -a "$PLATFORM_QPA" != "yes" ]; then
     [ "$CFG_GRAPHICS_SYSTEM" = "raster" ] && QCONFIG_FLAGS="$QCONFIG_FLAGS QT_GRAPHICSSYSTEM_RASTER"
@@ -8547,6 +8562,7 @@ cat >>"$QTCONFIG.tmp" <<EOF
 #configuration
 CONFIG += $QTCONFIG_CONFIG
 QT_ARCH = $CFG_ARCH
+QT_HOST_BITSIZE = $CFG_HOST_BITSIZE
 QT_EDITION = $Edition
 QT_CONFIG += $QT_CONFIG
 
